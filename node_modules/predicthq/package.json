{
  "_args": [
    [
      {
        "raw": "predicthq",
        "scope": null,
        "escapedName": "predicthq",
        "name": "predicthq",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/ioh/www/api-ai-demo/Api-AI-Personal-Assistant-Demo"
    ]
  ],
  "_from": "predicthq@latest",
  "_id": "predicthq@0.0.13",
  "_inCache": true,
  "_location": "/predicthq",
  "_nodeVersion": "6.4.0",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/predicthq-0.0.13.tgz_1487529591579_0.4765964769758284"
  },
  "_npmUser": {
    "name": "predicthq",
    "email": "developers@predicthq.com"
  },
  "_npmVersion": "3.10.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "predicthq",
    "scope": null,
    "escapedName": "predicthq",
    "name": "predicthq",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/predicthq/-/predicthq-0.0.13.tgz",
  "_shasum": "78fb6e427280b6c13e4bbbf533378b34ebaddb4c",
  "_shrinkwrap": null,
  "_spec": "predicthq",
  "_where": "/Users/ioh/www/api-ai-demo/Api-AI-Personal-Assistant-Demo",
  "author": {
    "name": "PredictHQ"
  },
  "browserify": {
    "transform": [
      [
        "babelify",
        {
          "presets": [
            "es2015"
          ]
        }
      ]
    ]
  },
  "bugs": {
    "url": "https://github.com/predicthq/sdk-js/issues"
  },
  "dependencies": {
    "core-js": "2.4.1",
    "es6-promise": "3.2.1",
    "jsonschema": "1.1.0",
    "loglevel": "1.4.1",
    "whatwg-fetch": "1.0.0",
    "youarei": "1.0.2"
  },
  "description": "PredictHQ Event Intelligence",
  "devDependencies": {
    "babel-cli": "6.14.0",
    "babel-core": "6.14.0",
    "babel-eslint": "6.1.2",
    "babel-istanbul": "0.11.0",
    "babel-plugin-transform-runtime": "6.12.0",
    "babel-polyfill": "6.13.0",
    "babel-preset-es2015": "6.14.0",
    "babelify": "7.3.0",
    "brfs": "1.4.3",
    "browserify": "13.1.0",
    "chalk": "1.1.3",
    "coveralls": "2.11.12",
    "dotenv": "2.0.0",
    "envify": "3.4.1",
    "eslint": "3.4.0",
    "expect": "1.20.2",
    "filesize": "3.3.0",
    "lodash": "4.15.0",
    "lodash-cli": "4.15.0",
    "lodash-modularize": "1.3.3",
    "mocha": "3.0.2",
    "module-deps": "4.0.7",
    "mversion": "1.10.1",
    "nock": "8.0.0",
    "node-fetch": "1.6.0",
    "npm-check-updates": "2.8.0",
    "uglify-js": "2.7.3"
  },
  "directories": {},
  "dist": {
    "shasum": "78fb6e427280b6c13e4bbbf533378b34ebaddb4c",
    "tarball": "https://registry.npmjs.org/predicthq/-/predicthq-0.0.13.tgz"
  },
  "gitHead": "b9e2ae0e4ee0265abf0bbc68a2114d706498115c",
  "homepage": "https://github.com/predicthq/sdk-js#readme",
  "license": "MIT",
  "main": "dist/predicthq.js",
  "maintainers": [
    {
      "name": "predicthq",
      "email": "developers@predicthq.com"
    }
  ],
  "name": "predicthq",
  "node6BrowserTestingDependencies": {
    "mocha-phantomjs": "4.1.0"
  },
  "optionalDependencies": {},
  "readme": "# PredictHQ API Client for Javascript\n\n[![Version](https://badge.fury.io/js/predicthq.svg)](http://badge.fury.io/js/predicthq)\n[![Build Status](https://travis-ci.org/predicthq/sdk-js.svg?branch=master)](https://travis-ci.org/predicthq/sdk-js)\n[![Coverage Status](https://coveralls.io/repos/github/predicthq/sdk-js/badge.svg?branch=master)](https://coveralls.io/github/predicthq/sdk-js?branch=master)\n\n[PredictHQ](https://www.predicthq.com/) is a global events intelligence platform that aggregates, enriches and connects scheduled and real-time event data happening both locally and globally, then predicts which ones could impact your business.\n\n\n## Installation\n\n    npm install predicthq\n    \n## Usage\n\n    var phq = require('predicthq')\n     \n    client = new phq.Client({access_token: \"ACCESS_TOKEN\"})\n    \n    client.events.search({q: 'Madonna', rank_level: 5, country:'AU', 'start.gte' : '2016-01-01'})\n        .then(function(results){\n            var events = results.toArray()\n            for(var i=0; i < events.length; i++)\n                console.info(events[i].rank, events[i].category, events[i].title, events[i].start, events[i].location )\n        })\n\n    88 'concerts' 'Madonna' '2016-03-27T10:00:00Z' [ 153.073, -27.3431 ]\n    88 'concerts' 'Madonna' '2016-03-26T10:00:00Z' [ 153.073, -27.3431 ]\n    88 'concerts' 'Madonna' '2016-03-16T17:30:00Z' [ 153.073, -27.3431 ]\n    88 'concerts' 'Madonna' '2016-03-16T10:00:00Z' [ 153.073, -27.3431 ]\n    89 'concerts' 'Madonna' '2016-03-12T09:00:00Z' [ 144.978, -37.8218 ]\n\n    \n## ES6 Usage\n    \n    import Client from 'predicthq'\n    \n    let client = new Client({access_token=:\"ACCESS_TOKEN\"})\n    \n    client.events.search({'within': '1km@42.35996,-71.06009', 'start.gte': '2016-03-08', 'start.lt': '2016-03-09'})\n        .then((results)=>{\n            for (let event of results)\n                console.info(event.title)\n        })\n \n## NodeJS\n\nYou will need to bring your own fetch library\n    \n    // npm install node-fetch\n    global.fetch = require('node-fetch') \n    var phq = require('predicthq')\n    var client = new phq.Client({access_token: \"ACCESS_TOKEN\"})\n    \n    // or\n    var fetch = require('node-fetch')\n    var phq = require('predicthq')\n    var client = new phq.Client({access_token: \"ACCESS_TOKEN\", fetch: fetch})\n    \n\n## Endpoints\n\n* events\n* accounts\n* places\n\n\nFor a description of all available endpoints, refer to our [API Documentation](https://developer.predicthq.com/).\n\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/predicthq/sdk-js.git"
  },
  "scripts": {
    "build": "NODE_ENV=production node node_modules/browserify/bin/cmd.js src/client.js -t babelify | node_modules/uglify-js/bin/uglifyjs -o dist/predicthq.js; node build.js",
    "coverage": "babel-node node_modules/babel-istanbul/lib/cli.js cover node_modules/mocha/bin/_mocha -- test",
    "coverage_to_travis": "babel-node node_modules/babel-istanbul/lib/cli.js cover node_modules/mocha/bin/_mocha -- test && cat ./coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js && rm -rf ./coverage",
    "lint": " node node_modules/eslint/bin/eslint.js  ./src/",
    "list_lodash_methods": "node_modules/lodash-modularize/bin/lodash-modularize src/**/**/*.js --list -g _",
    "lodash": "lodash_methods=$(npm run --silent list_lodash_methods | sed -e \"s/\\x1b\\[.\\{1,5\\}m//g\"); node_modules/lodash-cli/bin/lodash -o dist/lodash.custom.js include=$lodash_methods",
    "patch": "node_modules/mversion/bin/version patch -m",
    "test": "NODE_ENV=test node_modules/mocha/bin/mocha --require babel-core/register test",
    "test_browser": "ACCESS_TOKEN=$(node -r dotenv/config -e 'console.log(process.env.TEST_USER_PASSWORD_ACCESS_TOKEN)'); ACCOUNT_ID=$(node -r dotenv/config -e 'console.log(process.env.TEST_ACCOUNT_ID)'); ENDPOINT_URL=$(node -r dotenv/config -e 'console.log(process.env.ENDPOINT_URL)'); node_modules/mocha-phantomjs/bin/mocha-phantomjs --web-security no -b -R dot test/browser/runner.html?endpoint=${ENDPOINT_URL}\\&token=${ACCESS_TOKEN}\\&account_id=${ACCOUNT_ID}",
    "update": "node node_modules/npm-check-updates/bin/npm-check-updates --upgradeAll"
  },
  "version": "0.0.13"
}
